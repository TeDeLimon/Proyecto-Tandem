{"version":3,"sources":["app.js"],"names":["url","conversion","moneda","criptomonedas","formulario","document","querySelector","selectMonedas","selectCriptos","divResultado","async","iniciarAPP","obtenerCriptomonedas","agregarCriptomonedas","procesarCriptomonedas","resultado","respuesta","fetch","json","error","console","log","Data","cryptos","forEach","crypto","Name","FullName","CoinInfo","option","createElement","value","innerText","append","realizarConversion","e","preventDefault","Object","values","every","modificarConversion","Event","target","selectedIndex","options","id","ejemplosArrayMethods","i","length","perrito","crytoimpares","filter","index","addEventListener"],"mappings":"AACA,MAAMA,IAAM,0EAKNC,WAAa,CACfC,OAAQ,KACRC,cAAe,MAInB,IAAIA,cAAgB,KAGpB,MAAMC,WAAaC,SAASC,cAAc,eACpCC,cAAgBF,SAASC,cAAc,iBACvCE,cAAgBH,SAASC,cAAc,wBACvCG,aAAeJ,SAASC,cAAc,cAW5CI,eAAeC,aAMX,GAHAR,oBAAsBS,wBAGjBT,cAAe,OAMpBU,qBAHgBC,yBAWpBJ,eAAeE,uBAEX,IAAIG,EAAY,KAEhB,IAGI,MAAMC,QAAkBC,MAAMjB,KAG9Be,QAAkBC,EAAUE,OAE9B,MAAOC,GAELC,QAAQC,IAAI,yBAA0BF,GAExC,QAEE,OAAOJ,GASf,SAASD,wBAEL,MAAQQ,KAAMC,GAAYpB,cAE1B,OAAOoB,EAQX,SAASV,qBAAqBU,GAG1BA,EAAQC,QAAQC,IAEZ,MAAMC,KAAEA,EAAIC,SAAEA,GAAaF,EAAOG,SAE5BC,EAASxB,SAASyB,cAAc,UACtCD,EAAOE,MAAQL,EACfG,EAAOG,UAAYL,EAEnBnB,cAAcyB,OAAOJ,KAS7B,SAASK,mBAAmBC,GAExBA,EAAEC,iBAGGC,OAAOC,OAAOrC,YAAYsC,MAAMR,GAAkB,MAATA,IAC1CX,QAAQC,IAAI,wBAkBpB,SAASmB,oBAAoBC,GACzB,MAAMC,OAAEA,GAAWD,GAGbE,cAAEA,EAAaC,QAAEA,EAAOC,GAAEA,GAAOH,EAMjCX,EAHqBa,EAAQD,GAGFZ,MAGjC9B,WAAW4C,GAAMd,EAWrB,SAASe,qBAAqBvB,GAE1B,IAAK,IAAIwB,EAAI,EAAGA,EAAIxB,EAAQyB,OAAQD,KAIpCxB,EAAQC,SAAQ,SAAUyB,OAM1B,MAAMC,EAAe3B,EAAQ4B,OAAO,CAAC1B,EAAQ2B,IAAUA,EAAQ,GAAK,GAEpEhC,QAAQC,IAAI6B,GArJhB7C,SAASgD,iBAAiB,mBAAoB1C,YAC9CP,WAAWiD,iBAAiB,SAAUnB,oBACtC3B,cAAc8C,iBAAiB,SAAUb,qBACzChC,cAAc6C,iBAAiB,SAAUb","file":"app.js","sourcesContent":["//Variables del documento JS\r\nconst url = \"https://min-api.cryptocompare.com/data/top/mktcapfull?limit=20&tsym=USD\";\r\n\r\n/**\r\n * Objeto con la información de la moneda y de la criptomoneda seleccionada\r\n */\r\nconst conversion = {\r\n    moneda: null,\r\n    criptomonedas: null\r\n}\r\n\r\n//Por defecto, las criptomonedas al principio son nulas\r\nlet criptomonedas = null;\r\n\r\n//Selectores del documento\r\nconst formulario = document.querySelector(\"#formulario\");\r\nconst selectMonedas = document.querySelector(\"select#moneda\");\r\nconst selectCriptos = document.querySelector(\"select#criptomonedas\");\r\nconst divResultado = document.querySelector(\"#resultado\");\r\n\r\n//Event listeners\r\ndocument.addEventListener('DOMContentLoaded', iniciarAPP);\r\nformulario.addEventListener('submit', realizarConversion);\r\nselectMonedas.addEventListener('change', modificarConversion);\r\nselectCriptos.addEventListener('change', modificarConversion);\r\n\r\n/**\r\n * Función que controla el flujo principal de la aplicación\r\n */\r\nasync function iniciarAPP() {\r\n\r\n    //Consultar las criptomonedas disponibles\r\n    criptomonedas = await obtenerCriptomonedas();\r\n\r\n    //Si no existen criptomonedas detenemos la ejecución del código\r\n    if (!criptomonedas) return;\r\n\r\n    //Procesamos las criptomonedas\r\n    const cryptos = procesarCriptomonedas();\r\n\r\n    //Incorporamos las criptomonedas al select de criptos\r\n    agregarCriptomonedas(cryptos);\r\n}\r\n\r\n/**\r\n * Realiza una petición asíncrona al servidor y retorna las criptomonedas\r\n * \r\n * @returns {Array|null} Las criptomonedas obtenidas\r\n */\r\nasync function obtenerCriptomonedas() {\r\n\r\n    let resultado = null;\r\n\r\n    try {\r\n\r\n        //Esperamos la respuesta del servidor\r\n        const respuesta = await fetch(url);\r\n\r\n        //Convertimos el resultado a JSON\r\n        resultado = await respuesta.json();\r\n\r\n    } catch (error) {\r\n\r\n        console.log(\"Algo ha salido mal => \", error);\r\n\r\n    } finally {\r\n\r\n        return resultado;\r\n    }\r\n}\r\n\r\n/**\r\n * Desestructura el objecto de criptomonedas obtenido en el resultado\r\n * \r\n * @returns {Array} Array con las criptomonedas\r\n */\r\nfunction procesarCriptomonedas() {\r\n\r\n    const { Data: cryptos } = criptomonedas;\r\n\r\n    return cryptos;\r\n}\r\n\r\n/**\r\n * Añade dinámicamente las criptomonedas al select\r\n * \r\n * @param {Array} cryptos Las criptomonedas\r\n */\r\nfunction agregarCriptomonedas(cryptos) {\r\n\r\n    //Iteramos sobre cada criptomoneda generando un option que posteriormente es agregado\r\n    cryptos.forEach(crypto => {\r\n\r\n        const { Name, FullName } = crypto.CoinInfo;\r\n\r\n        const option = document.createElement('OPTION');\r\n        option.value = Name;\r\n        option.innerText = FullName;\r\n\r\n        selectCriptos.append(option);\r\n    })\r\n}\r\n\r\n/**\r\n * Función principal que se encarga de realizar la conversión\r\n * \r\n * @param {Event} e El evento que sucede en el DOM\r\n */\r\nfunction realizarConversion(e) {\r\n\r\n    e.preventDefault();\r\n\r\n    //Verificar que está seleccionado en ambos select alguna opción\r\n    if (!Object.values(conversion).every(value => value != null)) {\r\n        console.log(\"detengo la ejecución\")\r\n        return;\r\n    }\r\n\r\n\r\n\r\n    //Necesitamos realizar una consulta para obtener el valor de la criptomoneda en la moneda seleccionada\r\n\r\n    //Mostrar el resultado\r\n\r\n}\r\n\r\n//const urlConvert = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${criptomoneda}&tsysm${moneda}`;\r\n\r\n/**\r\n * Función asociada al evento change, modifica el objecto conversión con el valor del option seleccionado\r\n * @param {Event} Event El evento que sucede sobre el select\r\n */\r\nfunction modificarConversion(Event) {\r\n    const { target } = Event;\r\n\r\n    //Desectruturar el objeto sobre el que se ejecuta el evento\r\n    const { selectedIndex, options, id } = target;\r\n\r\n    //Obteniendo el option seleccionado\r\n    const optionSeleccionado = options[selectedIndex];\r\n\r\n    //El valor del option\r\n    const value = optionSeleccionado.value;\r\n\r\n    //Dinámicamente aprovechamos que el ID coincide con el nombre de la propiedad del object conversion y actualizamos su valor\r\n    conversion[id] = value;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction ejemplosArrayMethods(cryptos) {\r\n\r\n    for (let i = 0; i < cryptos.length; i++) {\r\n        //console.log(cryptos[i]);\r\n    }\r\n\r\n    cryptos.forEach(function (perrito) {\r\n        //console.log(perrito);\r\n    });\r\n\r\n    //cryptos.forEach(crypto => console.log(crypto));\r\n\r\n    const crytoimpares = cryptos.filter((crypto, index) => index % 2 == 0);\r\n\r\n    console.log(crytoimpares);\r\n}"]}