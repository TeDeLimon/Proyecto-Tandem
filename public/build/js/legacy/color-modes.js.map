{"version":3,"sources":["legacy/color-modes.js"],"names":["getStoredTheme","localStorage","getItem","getPreferredTheme","storedTheme","window","matchMedia","matches","setTheme","theme","document","documentElement","setAttribute","showActiveTheme","focus","themeSwitcher","querySelector","themeSwitcherText","activeThemeIcon","btnToActive","svgOfActiveBtn","getAttribute","querySelectorAll","forEach","element","classList","remove","add","themeSwitcherLabel","textContent","dataset","bsThemeValue","addEventListener","toggle","setItem","setStoredTheme"],"mappings":";;;;;AAMA,MACE,aAEA,MAAMA,EAAiB,IAAMC,aAAaC,QAAQ,SAG5CC,EAAoB,KACxB,MAAMC,EAAcJ,IACpB,OAAII,IAIGC,OAAOC,WAAW,gCAAgCC,QAAU,OAAS,UAGxEC,EAAWC,IACD,SAAVA,GAAoBJ,OAAOC,WAAW,gCAAgCC,QACxEG,SAASC,gBAAgBC,aAAa,gBAAiB,QAEvDF,SAASC,gBAAgBC,aAAa,gBAAiBH,IAI3DD,EAASL,KAET,MAAMU,EAAkB,CAACJ,EAAOK,GAAQ,KACtC,MAAMC,EAAgBL,SAASM,cAAc,aAE7C,IAAKD,EACH,OAGF,MAAME,EAAoBP,SAASM,cAAc,kBAC3CE,EAAkBR,SAASM,cAAc,0BACzCG,EAAcT,SAASM,cAAc,yBAAyBP,OAC9DW,EAAiBD,EAAYH,cAAc,WAAWK,aAAa,QAEzEX,SAASY,iBAAiB,yBAAyBC,QAAQC,IACzDA,EAAQC,UAAUC,OAAO,UACzBF,EAAQZ,aAAa,eAAgB,WAGvCO,EAAYM,UAAUE,IAAI,UAC1BR,EAAYP,aAAa,eAAgB,QACzCM,EAAgBN,aAAa,OAAQQ,GACrC,MAAMQ,EAAqB,GAAGX,EAAkBY,gBAAgBV,EAAYW,QAAQC,gBACpFhB,EAAcH,aAAa,aAAcgB,GAErCd,GACFC,EAAcD,SAIlBT,OAAOC,WAAW,gCAAgC0B,iBAAiB,SAAU,KAC3E,MAAM5B,EAAcJ,IACA,UAAhBI,GAA2C,SAAhBA,GAC7BI,EAASL,OAIbE,OAAO2B,iBAAiB,mBAAoB,KAC1CnB,EAAgBV,KAEhBO,SAASY,iBAAiB,yBACvBC,QAAQU,IACPA,EAAOD,iBAAiB,QAAS,KAC/B,MAAMvB,EAAQwB,EAAOZ,aAAa,uBA9DnBZ,CAAAA,IAASR,aAAaiC,QAAQ,QAASzB,IA+DtD0B,CAAe1B,GACfD,EAASC,GACTI,EAAgBJ,GAAO,UArEjC","file":"color-modes.js","sourcesContent":["/*!\n * Color mode toggler for Bootstrap's docs (https://getbootstrap.com/)\n * Copyright 2011-2023 The Bootstrap Authors\n * Licensed under the Creative Commons Attribution 3.0 Unported License.\n */\n\n(() => {\n  'use strict'\n\n  const getStoredTheme = () => localStorage.getItem('theme')\n  const setStoredTheme = theme => localStorage.setItem('theme', theme)\n\n  const getPreferredTheme = () => {\n    const storedTheme = getStoredTheme()\n    if (storedTheme) {\n      return storedTheme\n    }\n\n    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'\n  }\n\n  const setTheme = theme => {\n    if (theme === 'auto' && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      document.documentElement.setAttribute('data-bs-theme', 'dark')\n    } else {\n      document.documentElement.setAttribute('data-bs-theme', theme)\n    }\n  }\n\n  setTheme(getPreferredTheme())\n\n  const showActiveTheme = (theme, focus = false) => {\n    const themeSwitcher = document.querySelector('#bd-theme')\n\n    if (!themeSwitcher) {\n      return\n    }\n\n    const themeSwitcherText = document.querySelector('#bd-theme-text')\n    const activeThemeIcon = document.querySelector('.theme-icon-active use')\n    const btnToActive = document.querySelector(`[data-bs-theme-value=\"${theme}\"]`)\n    const svgOfActiveBtn = btnToActive.querySelector('svg use').getAttribute('href')\n\n    document.querySelectorAll('[data-bs-theme-value]').forEach(element => {\n      element.classList.remove('active')\n      element.setAttribute('aria-pressed', 'false')\n    })\n\n    btnToActive.classList.add('active')\n    btnToActive.setAttribute('aria-pressed', 'true')\n    activeThemeIcon.setAttribute('href', svgOfActiveBtn)\n    const themeSwitcherLabel = `${themeSwitcherText.textContent} (${btnToActive.dataset.bsThemeValue})`\n    themeSwitcher.setAttribute('aria-label', themeSwitcherLabel)\n\n    if (focus) {\n      themeSwitcher.focus()\n    }\n  }\n\n  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {\n    const storedTheme = getStoredTheme()\n    if (storedTheme !== 'light' && storedTheme !== 'dark') {\n      setTheme(getPreferredTheme())\n    }\n  })\n\n  window.addEventListener('DOMContentLoaded', () => {\n    showActiveTheme(getPreferredTheme())\n\n    document.querySelectorAll('[data-bs-theme-value]')\n      .forEach(toggle => {\n        toggle.addEventListener('click', () => {\n          const theme = toggle.getAttribute('data-bs-theme-value')\n          setStoredTheme(theme)\n          setTheme(theme)\n          showActiveTheme(theme, true)\n        })\n      })\n  })\n})()\n"]}